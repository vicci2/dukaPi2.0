"""added products table

Revision ID: 22b83f9a6c6a
Revises: d89c0fdf7fa1
Create Date: 2025-01-24 13:07:20.576836

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '22b83f9a6c6a'
down_revision: Union[str, None] = 'd89c0fdf7fa1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Adding the products table
    op.create_table('products',
        sa.Column('id', sa.Integer, primary_key=True),
        sa.Column('company_id', sa.Integer, sa.ForeignKey('companies.id')),
        sa.Column('serial_no', sa.String, nullable=False, unique=True),
        sa.Column('product_name', sa.String, nullable=False, unique=True),
        sa.Column('image', sa.String, nullable=True),
        sa.Column('category', sa.String, nullable=True),
        sa.Column('supplier', sa.String, nullable=True),
        sa.Column('desc', sa.Text, nullable=False),
        sa.Column('quantity', sa.Numeric, nullable=False),
        sa.Column('b_p', sa.Numeric, nullable=False),
        sa.Column('last_updated', sa.DateTime(timezone=False), server_default=sa.func.now()),
        sa.Column('date', sa.DateTime(timezone=False), server_default=sa.func.now()),
    )
    # Creating an index on the products table (optional but recommended)
    op.create_index('ix_products_id', 'products', ['id'], unique=False)
    # ### end Alembic commands ###

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('tel_no', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('avatar', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('password_hash', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('role', postgresql.ENUM('admin', 'manager', 'staff', 'user', name='userrole'), autoincrement=False, nullable=True),
    sa.Column('last_login', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name='users_company_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    sa.UniqueConstraint('tel_no', name='users_tel_no_key'),
    sa.UniqueConstraint('username', name='users_username_key')
    )
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_table('companies',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('companies_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='companies_pkey'),
    sa.UniqueConstraint('email', name='companies_email_key'),
    sa.UniqueConstraint('name', name='companies_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_companies_id', 'companies', ['id'], unique=False)
    op.create_table('subscriptions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tier_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transaction_code', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name='subscriptions_company_id_fkey'),
    sa.ForeignKeyConstraint(['tier_id'], ['tiers.id'], name='subscriptions_tier_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='subscriptions_pkey'),
    sa.UniqueConstraint('transaction_code', name='subscriptions_transaction_code_key')
    )
    op.create_index('ix_subscriptions_id', 'subscriptions', ['id'], unique=False)
    op.create_table('tiers',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='tiers_pkey'),
    sa.UniqueConstraint('name', name='tiers_name_key')
    )
    op.create_index('ix_tiers_id', 'tiers', ['id'], unique=False)
    # ### end Alembic commands ###
